package au.com.codeka.warworlds.server.handlers;

import java.sql.Statement;

import au.com.codeka.warworlds.model.protobuf.Messages;
import au.com.codeka.warworlds.server.RequestException;
import au.com.codeka.warworlds.server.RequestHandler;
import au.com.codeka.warworlds.server.data.DB;
import au.com.codeka.warworlds.server.data.SqlStmt;

import com.google.protobuf.Message;

public class DevicesHandler extends RequestHandler {

    @Override
    protected Message post() throws RequestException {
        Messages.DeviceRegistration registration = getRequestBody(Messages.DeviceRegistration.class);

        Integer id = null;
        try(SqlStmt sql = DB.prepare(
                "SELECT id FROM device_registrations WHERE device_id=? AND user_email=?")) {
            sql.setString(1, registration.getDeviceId());
            sql.setString(2, getCurrentUser());
            id = sql.selectFirstValue(Integer.class);
        } catch (Exception e) {
            throw new RequestException(500, e);
        }

        String stmt;
        if (id == null) {
            stmt = "INSERT INTO device_registrations (device_id, user_email, device_model, device_manufacturer, device_build, device_version) VALUES (?, ?, ?, ?, ?, ?)";
        } else {
            stmt = "UPDATE device_registrations SET device_id=?, user_email=?, device_model=?, device_manufacturer=?, device_build=?, device_version=? WHERE id=?";
        }

        try (SqlStmt sql = DB.prepare(stmt, Statement.RETURN_GENERATED_KEYS)) {
            sql.setString(1, registration.getDeviceId());
            sql.setString(2, getCurrentUser());
            sql.setString(3, registration.getDeviceModel());
            sql.setString(4, registration.getDeviceManufacturer());
            sql.setString(5, registration.getDeviceBuild());
            sql.setString(6, registration.getDeviceVersion());
            if (id != null) {
                sql.setInt(7, id);
            }
            sql.update();
            if (id == null) {
                id = sql.getAutoGeneratedID();
            }

            return Messages.DeviceRegistration.newBuilder()
                    .setKey(id.toString())
                    .build();
        } catch (Exception e) {
            throw new RequestException(500, e);
        }
    }
}
