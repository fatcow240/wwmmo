// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class SituationReports extends Message {

  public static final List<SituationReport> DEFAULT_SITUATION_REPORTS = Collections.emptyList();
  public static final String DEFAULT_CURSOR = "";

  @ProtoField(tag = 1, label = REPEATED)
  public List<SituationReport> situation_reports;

  /**
   * a cursor used to fetch the remaining reports
   */
  @ProtoField(tag = 2, type = STRING)
  public String cursor;

  private SituationReports(Builder builder) {
    super(builder);
    this.situation_reports = immutableCopyOf(builder.situation_reports);
    this.cursor = builder.cursor;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SituationReports)) return false;
    SituationReports o = (SituationReports) other;
    return equals(situation_reports, o.situation_reports)
        && equals(cursor, o.cursor);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = situation_reports != null ? situation_reports.hashCode() : 0;
      result = result * 37 + (cursor != null ? cursor.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SituationReports> {

    public List<SituationReport> situation_reports;
    public String cursor;

    public Builder() {
    }

    public Builder(SituationReports message) {
      super(message);
      if (message == null) return;
      this.situation_reports = copyOf(message.situation_reports);
      this.cursor = message.cursor;
    }

    public Builder situation_reports(List<SituationReport> situation_reports) {
      this.situation_reports = situation_reports;
      return this;
    }

    public Builder cursor(String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public SituationReports build() {
      return new SituationReports(this);
    }
  }
}
