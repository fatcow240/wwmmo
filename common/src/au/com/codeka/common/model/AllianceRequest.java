// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class AllianceRequest extends Message {

  public static final Integer DEFAULT_ID = 0;
  public static final Integer DEFAULT_ALLIANCE_ID = 0;
  public static final Integer DEFAULT_REQUEST_EMPIRE_ID = 0;
  public static final Long DEFAULT_REQUEST_DATE = 0L;
  public static final RequestType DEFAULT_REQUEST_TYPE = RequestType.JOIN;
  public static final String DEFAULT_MESSAGE = "";
  public static final RequestState DEFAULT_STATE = RequestState.PENDING;
  public static final Integer DEFAULT_VOTES = 0;
  public static final Integer DEFAULT_TARGET_EMPIRE_ID = 0;
  public static final Float DEFAULT_AMOUNT = 0F;

  @ProtoField(tag = 1, type = INT32)
  public Integer id;

  @ProtoField(tag = 2, type = INT32)
  public Integer alliance_id;

  @ProtoField(tag = 3, type = INT32)
  public Integer request_empire_id;

  @ProtoField(tag = 4, type = INT64)
  public Long request_date;

  @ProtoField(tag = 5, type = ENUM)
  public RequestType request_type;

  @ProtoField(tag = 6, type = STRING)
  public String message;

  @ProtoField(tag = 7, type = ENUM)
  public RequestState state;

  @ProtoField(tag = 8, type = INT32)
  public Integer votes;

  /**
   * for KICK requests, this is the empire we're kicking
   */
  @ProtoField(tag = 9, type = INT32)
  public Integer target_empire_id;

  /**
   * for DEPOSIT_CASH and WITHDRAW_CASH, the amount of cash to deposit/withdraw
   */
  @ProtoField(tag = 10, type = FLOAT)
  public Float amount;

  private AllianceRequest(Builder builder) {
    super(builder);
    this.id = builder.id;
    this.alliance_id = builder.alliance_id;
    this.request_empire_id = builder.request_empire_id;
    this.request_date = builder.request_date;
    this.request_type = builder.request_type;
    this.message = builder.message;
    this.state = builder.state;
    this.votes = builder.votes;
    this.target_empire_id = builder.target_empire_id;
    this.amount = builder.amount;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AllianceRequest)) return false;
    AllianceRequest o = (AllianceRequest) other;
    return equals(id, o.id)
        && equals(alliance_id, o.alliance_id)
        && equals(request_empire_id, o.request_empire_id)
        && equals(request_date, o.request_date)
        && equals(request_type, o.request_type)
        && equals(message, o.message)
        && equals(state, o.state)
        && equals(votes, o.votes)
        && equals(target_empire_id, o.target_empire_id)
        && equals(amount, o.amount);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (alliance_id != null ? alliance_id.hashCode() : 0);
      result = result * 37 + (request_empire_id != null ? request_empire_id.hashCode() : 0);
      result = result * 37 + (request_date != null ? request_date.hashCode() : 0);
      result = result * 37 + (request_type != null ? request_type.hashCode() : 0);
      result = result * 37 + (message != null ? message.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (votes != null ? votes.hashCode() : 0);
      result = result * 37 + (target_empire_id != null ? target_empire_id.hashCode() : 0);
      result = result * 37 + (amount != null ? amount.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AllianceRequest> {

    public Integer id;
    public Integer alliance_id;
    public Integer request_empire_id;
    public Long request_date;
    public RequestType request_type;
    public String message;
    public RequestState state;
    public Integer votes;
    public Integer target_empire_id;
    public Float amount;

    public Builder() {
    }

    public Builder(AllianceRequest message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.alliance_id = message.alliance_id;
      this.request_empire_id = message.request_empire_id;
      this.request_date = message.request_date;
      this.request_type = message.request_type;
      this.message = message.message;
      this.state = message.state;
      this.votes = message.votes;
      this.target_empire_id = message.target_empire_id;
      this.amount = message.amount;
    }

    public Builder id(Integer id) {
      this.id = id;
      return this;
    }

    public Builder alliance_id(Integer alliance_id) {
      this.alliance_id = alliance_id;
      return this;
    }

    public Builder request_empire_id(Integer request_empire_id) {
      this.request_empire_id = request_empire_id;
      return this;
    }

    public Builder request_date(Long request_date) {
      this.request_date = request_date;
      return this;
    }

    public Builder request_type(RequestType request_type) {
      this.request_type = request_type;
      return this;
    }

    public Builder message(String message) {
      this.message = message;
      return this;
    }

    public Builder state(RequestState state) {
      this.state = state;
      return this;
    }

    public Builder votes(Integer votes) {
      this.votes = votes;
      return this;
    }

    public Builder target_empire_id(Integer target_empire_id) {
      this.target_empire_id = target_empire_id;
      return this;
    }

    public Builder amount(Float amount) {
      this.amount = amount;
      return this;
    }

    @Override
    public AllianceRequest build() {
      return new AllianceRequest(this);
    }
  }

  public enum RequestType {
    @ProtoEnum(0)
    JOIN,
    @ProtoEnum(1)
    LEAVE,
    @ProtoEnum(2)
    KICK,
    @ProtoEnum(3)
    DEPOSIT_CASH,
    @ProtoEnum(4)
    WITHDRAW_CASH,
  }

  public enum RequestState {
    @ProtoEnum(0)
    PENDING,
    @ProtoEnum(1)
    ACCEPTED,
    @ProtoEnum(2)
    REJECTED,
  }
}
