// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class GenericError extends Message {

  public static final Integer DEFAULT_ERROR_CODE = 0;
  public static final String DEFAULT_ERROR_MESSAGE = "";

  @ProtoField(tag = 1, type = INT32)
  public Integer error_code;

  @ProtoField(tag = 2, type = STRING)
  public String error_message;

  private GenericError(Builder builder) {
    super(builder);
    this.error_code = builder.error_code;
    this.error_message = builder.error_message;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GenericError)) return false;
    GenericError o = (GenericError) other;
    return equals(error_code, o.error_code)
        && equals(error_message, o.error_message);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = error_code != null ? error_code.hashCode() : 0;
      result = result * 37 + (error_message != null ? error_message.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GenericError> {

    public Integer error_code;
    public String error_message;

    public Builder() {
    }

    public Builder(GenericError message) {
      super(message);
      if (message == null) return;
      this.error_code = message.error_code;
      this.error_message = message.error_message;
    }

    public Builder error_code(Integer error_code) {
      this.error_code = error_code;
      return this;
    }

    public Builder error_message(String error_message) {
      this.error_message = error_message;
      return this;
    }

    @Override
    public GenericError build() {
      return new GenericError(this);
    }
  }

  public enum ErrorCode {
    @ProtoEnum(15)
    UnknownError,
    @ProtoEnum(1)
    InsufficientCash,
    @ProtoEnum(2)
    CannotAttackOwnColony,
    @ProtoEnum(7)
    CannotAttackColonyGone,
    @ProtoEnum(3)
    CannotBuildDependencyNotMet,
    @ProtoEnum(4)
    CannotBuildMaxPerColonyReached,
    @ProtoEnum(8)
    CannotBuildMaxPerEmpireReached,
    @ProtoEnum(5)
    CannotBuildMaxLevelReached,
    @ProtoEnum(6)
    RenameStarOldNameIncorrect,
    @ProtoEnum(9)
    CannotCreateEmpireDuplicateName,
    @ProtoEnum(10)
    CannotCreateEmpireBlankName,
    @ProtoEnum(11)
    CannotSplitFleetUnequalSizes,
    @ProtoEnum(12)
    CannotOrderFleetNotIdle,
    @ProtoEnum(13)
    CannotMergeFleetDifferentDesign,
    @ProtoEnum(14)
    CannotCollectTaxesAlreadyInProgress,
    @ProtoEnum(16)
    CannotColonizePlanetAlreadyHasColony,
    @ProtoEnum(17)
    CannotColonizePlanetNoColonyShips,
  }
}
