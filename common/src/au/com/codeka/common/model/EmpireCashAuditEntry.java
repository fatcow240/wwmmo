// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./messages.proto
package au.com.codeka.common.model;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class EmpireCashAuditEntry extends Message {

  public static final String DEFAULT_KEY = "";
  public static final String DEFAULT_EMPIRE_KEY = "";
  public static final Float DEFAULT_DIFFERENCE = 0F;
  public static final Float DEFAULT_OLD_CASH = 0F;
  public static final Float DEFAULT_NEW_CASH = 0F;
  public static final String DEFAULT_REASON = "";
  public static final Long DEFAULT_TIME = 0L;

  @ProtoField(tag = 1, type = STRING)
  public String key;

  @ProtoField(tag = 2, type = STRING)
  public String empire_key;

  @ProtoField(tag = 3, type = FLOAT)
  public Float difference;

  @ProtoField(tag = 4, type = FLOAT)
  public Float old_cash;

  @ProtoField(tag = 5, type = FLOAT)
  public Float new_cash;

  @ProtoField(tag = 6, type = STRING)
  public String reason;

  @ProtoField(tag = 7, type = INT64)
  public Long time;

  private EmpireCashAuditEntry(Builder builder) {
    super(builder);
    this.key = builder.key;
    this.empire_key = builder.empire_key;
    this.difference = builder.difference;
    this.old_cash = builder.old_cash;
    this.new_cash = builder.new_cash;
    this.reason = builder.reason;
    this.time = builder.time;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof EmpireCashAuditEntry)) return false;
    EmpireCashAuditEntry o = (EmpireCashAuditEntry) other;
    return equals(key, o.key)
        && equals(empire_key, o.empire_key)
        && equals(difference, o.difference)
        && equals(old_cash, o.old_cash)
        && equals(new_cash, o.new_cash)
        && equals(reason, o.reason)
        && equals(time, o.time);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = key != null ? key.hashCode() : 0;
      result = result * 37 + (empire_key != null ? empire_key.hashCode() : 0);
      result = result * 37 + (difference != null ? difference.hashCode() : 0);
      result = result * 37 + (old_cash != null ? old_cash.hashCode() : 0);
      result = result * 37 + (new_cash != null ? new_cash.hashCode() : 0);
      result = result * 37 + (reason != null ? reason.hashCode() : 0);
      result = result * 37 + (time != null ? time.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<EmpireCashAuditEntry> {

    public String key;
    public String empire_key;
    public Float difference;
    public Float old_cash;
    public Float new_cash;
    public String reason;
    public Long time;

    public Builder() {
    }

    public Builder(EmpireCashAuditEntry message) {
      super(message);
      if (message == null) return;
      this.key = message.key;
      this.empire_key = message.empire_key;
      this.difference = message.difference;
      this.old_cash = message.old_cash;
      this.new_cash = message.new_cash;
      this.reason = message.reason;
      this.time = message.time;
    }

    public Builder key(String key) {
      this.key = key;
      return this;
    }

    public Builder empire_key(String empire_key) {
      this.empire_key = empire_key;
      return this;
    }

    public Builder difference(Float difference) {
      this.difference = difference;
      return this;
    }

    public Builder old_cash(Float old_cash) {
      this.old_cash = old_cash;
      return this;
    }

    public Builder new_cash(Float new_cash) {
      this.new_cash = new_cash;
      return this;
    }

    public Builder reason(String reason) {
      this.reason = reason;
      return this;
    }

    public Builder time(Long time) {
      this.time = time;
      return this;
    }

    @Override
    public EmpireCashAuditEntry build() {
      return new EmpireCashAuditEntry(this);
    }
  }
}
